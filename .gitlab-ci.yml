# Do not create pipelines for non-default branches
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never

stages:
  - test
  - deploy

.aea-tags: &aea-tags
  tags:
    - shell
    - aea
    - linux

.nix-job-environment: &nix-job-environment
  variables:
    GIT_STRATEGY: clone
    conda_installation: "/apps/miniconda3/3.13-miniconda-25.5.1"
    environment_file: "environment.yml"
  before_script:
    - function check_directory_variable () { echo "$1"; if [[ -z $1 ]] || [[ ! -d $1 ]]; then exit 1; fi; }
    - check_directory_variable "${conda_installation}"
    - echo ${environment_file}
    - if [[ -z ${environment_file} ]]; then exit 1; fi
    # Common job variables
    - prefix="$PWD/conda-environment"
    - conda_pkgs_dirs="$PWD/conda-pkgs"
    - echo ${prefix}
    - echo ${conda_pkgs_dirs}
    - if [[ -z ${prefix} ]]; then exit 1; fi
    - if [[ -z ${conda_pkgs_dirs} ]]; then exit 1; fi
    # Put texlive on PATH for AEA/HPC
    - module load texlive || true
    # Environment creation
    - export CONDA_PKGS_DIRS="${conda_pkgs_dirs}"
    - source ${conda_installation}/etc/profile.d/conda.sh
    - conda info
    - conda env create --prefix ${prefix} --file ${environment_file} --yes
    - conda activate ${prefix}
    - conda info
    - conda env export
  after_script:
    - rm -r $PWD/conda-environment $PWD/conda-pkgs || true

.conda-build: &conda-build
  variables:
    recipe_directory: "recipe"
    conda_artifacts_directory: "conda-bld"
  script:
    # Job variables
    - echo ${recipe_directory}
    - echo ${conda_artifacts_directory}
    - echo ${tag_path_root}
    - if [[ -z ${recipe_directory} ]]; then exit 1; fi
    - if [[ -z ${conda_artifacts_directory} ]]; then exit 1; fi
    # Job commands
    - mkdir ${conda_artifacts_directory}
    - VERSION=$(python -m setuptools_scm) conda mambabuild ${recipe_directory} --channel conda-forge --no-anaconda-upload --output-folder ${conda_artifacts_directory}

aea-developer-test:
  extends:
    - .nix-job-environment
    - .aea-tags
  stage: test
  script:
    - abaqus_command='--abaqus-command=/apps/abaqus/Commands/abq2024 --abaqus-command=/apps/abaqus/Commands/abq2023'
    - cubit_command=''
    - if [[ $CI_PIPELINE_SOURCE == "schedule" ]]; then cubit_command='--cubit-command=/apps/Cubit-16.16/cubit --cubit-command=/apps/Cubit-16.12/cubit'; fi
    - echo ${abaqus_command}
    - echo ${cubit_command}
    - scons regression ${abaqus_command} ${cubit_command}
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/pytest/coverage.xml
    paths:
      - build/docs/html-internal

aea-style:
  extends:
    - .nix-job-environment
    - .aea-tags
  stage: test
  variables:
    environment_file: "style.yml"
  script:
    - scons style

aea-conda-build-internal:
  extends:
    - .nix-job-environment
    - .conda-build
    - .aea-tags
  stage: test
  variables:
    environment_file: "conda-build.yml"
    recipe_directory: "recipe-internal"
    conda_artifacts_directory: "conda-bld"
  artifacts:
    expire_in: '2 hrs'
    paths:
      - conda-bld/noarch/turbo_turtle-*-*.tar.bz2
  script:
    - !reference [.conda-build, script]
    # Help downstream deploy pipeline find this job by ID
    - tag_job_file_root="/nettmp/aea_service"
    - tag_job_file_parent="${tag_job_file_root}/${CI_PROJECT_PATH}"
    - tag_job_file="${tag_job_file_parent}/tag_conda_build.txt"
    - if [[ ! -z ${CI_COMMIT_TAG} ]] && [[ -d ${tag_job_file_root} ]]; then mkdir -p ${tag_job_file_parent}; echo ${CI_JOB_ID} > ${tag_job_file}; fi

aea-conda-build:
  extends:
    - .nix-job-environment
    - .conda-build
    - .aea-tags
  stage: test
  variables:
    environment_file: "conda-build.yml"

aea-conda-build-matrix:
  extends:
    - .nix-job-environment
    - .aea-tags
  timeout: 4h
  stage: test
  variables:
    conda_artifacts_directory: "conda-bld"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - mkdir ${conda_artifacts_directory}
    - pytest recipe-matrix/matrix.py -v --no-showlocals --tb=short

# https://re-git.lanl.gov/aea/developer-operations/aea-conda
aea-conda-deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    PARENT_CI_JOB_ID_FILE: /nettmp/aea_service/${CI_PROJECT_PATH}/tag_conda_build.txt
    AEA_CONDA_DEPLOY_JOB: aea-conda-deploy-curl-jobid
    PARENT_CI_PROJECT_ID: $CI_PROJECT_ID
    AEA_CONDA_PACKAGE_JOB: aea-conda-build-internal
    AEA_CONDA_PACKAGE_ARTIFACTS: conda-bld/noarch/turbo_turtle-*-*.tar.bz2
  trigger:
    project: aea/developer-operations/aea-conda
    branch: main
    strategy: depend

aea-pip-build:
  extends:
    - .nix-job-environment
    - .aea-tags
  stage: test
  variables:
    distribution_name: "turbo-turtle"
    environment_file: "pip-build.yml"
  script:
    # Job variables
    - distribution_filename=$(echo ${distribution_name} | tr - _)
    - scons pyproject.toml
    - version=$(python -m setuptools_scm)
    - echo ${distribution_name}
    - echo ${distribution_filename}
    - echo ${version}
    - if [[ -z ${distribution_name} ]]; then exit 1; fi
    - if [[ -z ${distribution_filename} ]]; then exit 1; fi
    - if [[ -z ${version} ]]; then exit 1; fi
    # Job commands
    # Conda CI environment active
    - scons build
    - python -m venv pip-build-test
    # Python venv environment active
    - source pip-build-test/bin/activate
    - python -m pip install --verbose --disable-pip-version-check --require-virtualenv --no-cache-dir build/dist/${distribution_filename}-${version}.tar.gz pytest pytest-xdist
    - cd pip-build-test/lib/python*/site-packages/turbo_turtle
    - python -m pytest -vvv -n 4
  artifacts:
    expire_in: "2 hrs"
    paths:
      - build/dist/turbo_turtle-*.tar.gz
      - build/dist/turbo_turtle-*.whl

aea-pip-deploy:
  extends:
    - .nix-job-environment
    - .aea-tags
  stage: deploy
  variables:
    environment_file: "pip-upload.yml"
  dependencies:
    - "aea-pip-build"
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi build/dist/*

# It MUST be called pages
pages:
  extends:
    - .aea-tags
  stage: deploy
  dependencies:
    - "aea-developer-test"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
  script:
    - rm -rf public
    - mkdir -p public
    - cp -r build/docs/html-internal/* public/
  artifacts:
    paths:
      # It MUST be called public
      - public

release:
  extends:
    - .nix-job-environment
    - .aea-tags
  stage: deploy
  variables:
    environment_file: "gitlab-release.yml"
  rules:
    - if: $PARENT_CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_TAG
  script:
    # Create the release notes. Assumes changelog contains section headers with version number in reverse chronological
    # order as:
    #
    # ```
    # *******************
    # 0.12.6 (2025-02-24)
    # *******************
    # ... 0.12.6 changelog content to include as release notes...
    # *******************
    # 0.12.5 (2025-01-27)
    # *******************
    # ```
    #
    # sed commands
    #
    # 1. print everything between current version and the previous version, excluding the versions
    # 2. strip the asterisk delimited section header bars
    # 3. replace the RST issue/merge custom directives with plain text
    - notes_file="notes.md"
    - sed -n '/^'"$CI_COMMIT_TAG"'/,/^[0-9]\+\.[0-9]\+\.[0-9]\+/{//!p}' docs/changelog.rst > ${notes_file}
    - sed -i '/^\*\+$/d' ${notes_file}
    - sed -i 's/:\([a-z]\+\):`\([0-9]\+\)`/\1 \2/g' ${notes_file}
    - cat ${notes_file}
    # Authenticate and create release with glab
    - glab auth login --job-token ${CI_JOB_TOKEN} --hostname ${CI_SERVER_HOST} --api-protocol ${CI_SERVER_PROTOCOL}
    - GITLAB_HOST=${CI_SERVER_URL} glab release create ${CI_COMMIT_TAG} -R ${CI_PROJECT_PATH} --ref ${CI_COMMIT_SHA} --notes-file ${notes_file} --no-update --no-close-milestone
